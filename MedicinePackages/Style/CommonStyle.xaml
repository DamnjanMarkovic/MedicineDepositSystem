<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="CustomBackground" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="Red"/>
    </Style>


    <!--Custom progress Bar-->
    <Style x:Key="VerticalProgressBar" TargetType="{x:Type ProgressBar}" >
        <Setter Property="Orientation" Value="Vertical"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Border BorderBrush="White" BorderThickness="1">
                        <Grid x:Name="TemplateRoot" Opacity=".3" >
                            <Rectangle Name="PART_Track"  >
                                <Rectangle.Fill>
                                    <SolidColorBrush Color="red"></SolidColorBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <DockPanel Margin="1">
                                <Rectangle Name="PART_Indicator">
                                </Rectangle>
                                <Rectangle Name="Mask" MinWidth="{TemplateBinding Width}" Fill="Blue"/>
                            </DockPanel>
                            <!--<DockPanel>-->
                                <ListView ItemsSource="{Binding Item1.NumberOfFields}" 
                                          Background="Transparent" HorizontalContentAlignment="Right"
                                          HorizontalAlignment="Center" VerticalAlignment="Top"
                                          ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                          ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                          Margin="0"
                                          >
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="Padding" Value="0"/>
                                        <Setter Property="Margin" Value="0"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                    </Style>
                                </ListView.ItemContainerStyle>
                                <ListView.ItemTemplate >
                                        <DataTemplate>
                                        <StackPanel Background="Transparent" >
                                            <Rectangle Fill="Transparent" 
                                                           Stroke="White" 
                                                           VerticalAlignment="Top" HorizontalAlignment="Stretch" 
                                                           Width="210" Height="{Binding FieldHeight}" >                                                    
                                                </Rectangle>
                                            </StackPanel>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                    <ListView.LayoutTransform>
                                        <RotateTransform Angle="-90"/>
                                    </ListView.LayoutTransform>
                                </ListView>
                                <!--<ListView>
                                    
                                </ListView>-->
                                <!--<Rectangle Fill="Transparent" Stroke="White" VerticalAlignment="Stretch" Width="20" Margin="0 0 0 0"/>
                                <Rectangle Fill="Transparent" Stroke="White" VerticalAlignment="Stretch" Width="20" Margin="0 0 0 0"/>
                                <Rectangle Fill="Transparent" Stroke="White" VerticalAlignment="Stretch" Width="20" Margin="0 0 0 0"/>
                                <Rectangle Fill="Transparent" Stroke="White" VerticalAlignment="Stretch" Width="20" Margin="0 0 0 0"/>
                                <Rectangle Fill="Transparent" Stroke="White" VerticalAlignment="Stretch" Width="20" Margin="0 0 0 0"/>
                                <Rectangle Fill="Transparent" Stroke="White" VerticalAlignment="Stretch" Width="20" Margin="0 0 0 0"/>
                                <Rectangle Fill="Transparent" Stroke="White" VerticalAlignment="Stretch" Width="20" Margin="0 0 0 0"/>
                                <Rectangle Fill="Transparent" Stroke="White" VerticalAlignment="Stretch" Width="20" Margin="0 0 0 0"/>
                                <Rectangle Fill="Transparent" Stroke="White" VerticalAlignment="Stretch" Width="20" Margin="0 0 0 0"/>
                                <Rectangle Fill="Transparent" Stroke="White" VerticalAlignment="Stretch" Width="20" Margin="0 0 0 0"/>-->
                            <!--</DockPanel>-->
                        </Grid>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Setter Property="ToolTip">
            <Setter.Value>
                    <ToolTip Placement="Bottom" Visibility="Visible">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Power Availability : "/>
                                --><!--<TextBlock Width="{TemplateBinding Value}"/>--><!--
                                <TextBlock Text="%"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Remaining Time : "/>
                                --><!--<TextBlock Width="{TemplateBinding Value}"/>--><!--
                                <TextBlock Text="min"/>
                            </StackPanel>
                        </StackPanel>
                    </ToolTip>
            </Setter.Value>
        </Setter>-->

    </Style>
    
    <!--Custom Button-->

    <Style TargetType="Button" x:Key="RoundButton">
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="70" />
            </Style>
        </Style.Resources>
    </Style>
    <Style x:Key="GlassButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="WhiteSmoke" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="ButtonBorder" CornerRadius="15" BorderThickness="2" 
                            Background="Gray" BorderBrush="#99FFFFFF" RenderTransformOrigin="0.5,0.5">

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="1*"/>
                            </Grid.RowDefinitions>
                            <Border Grid.Row="0" CornerRadius="5">
                                <Border.Background>
                                    <LinearGradientBrush >


                                        <GradientStop Color="#08FFFFFF" Offset="0"/>
                                        <GradientStop Color="#88FFFFFF" Offset="5"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <ContentPresenter Grid.RowSpan="2" HorizontalAlignment="Center" VerticalAlignment="Center" Name="content"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="RenderTransform" TargetName="ButtonBorder">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Button" x:Key="CustomButton" >
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button" >
                    <Border x:Name="border"   
                            VerticalAlignment="{TemplateBinding VerticalAlignment}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"                        
                            Background="{TemplateBinding Background}"
                            Height="{TemplateBinding Height}"
                                >
                        <ContentPresenter x:Name="contentPresenter"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    Tag="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TextOnEmptyField}"  
                                >
                        </ContentPresenter>
                    </Border>
                    <!--<ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Content" TargetName="contentPresenter" 
                                Value="{Binding Path=MouseOverContentPresenter, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:CustomButton}}}" />
                            <Setter Property="Background" TargetName="border" Value="{Binding Path=BackgroundMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:CustomButton}}}"/>

                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Content" TargetName="contentPresenter" 
                                Value="{Binding Path=KeyboardFocusedContentPresenter, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:CustomButton}}}" />
                            <Setter Property="Background" TargetName="border" Value="{Binding Path=BackgroundMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:CustomButton}}}"/>

                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Content" TargetName="contentPresenter" 
                                        Value="{Binding Path=CheckedContentPresenter, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:CustomButton}}}" />
                            <Setter Property="Background" TargetName="border" Value="{Binding Path=BackgroundChecked, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:CustomButton}}}"/>

                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            --><!--<Setter Property="Content" TargetName="contentPresenter" 
                                        Value="{Binding Path=DisabledContentPresenter, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:CustomButton}}}" />
                                <Setter Property="Background" TargetName="border" Value="{Binding Path=BackgroundChecked, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:CustomButton}}}"/>--><!--
                            <Setter Property="Opacity" Value="0.7"/>

                        </Trigger>
                    </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>







    <!--<Style x:Key="CustomProgressBar" TargetType="ProgressBar">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid>                        
                        <Grid x:Name="TemplateRoot">
                            <Rectangle Name="PART_Track" StrokeThickness="1" Fill="red">
                                --><!--<Rectangle.Fill>
                                    <SolidColorBrush Color="red"></SolidColorBrush>
                                </Rectangle.Fill>--><!--
                            </Rectangle>
                            <DockPanel Margin="1">
                                <Rectangle Name="PART_Indicator">
                                </Rectangle>
                                <Rectangle Name="Mask" MinWidth="{TemplateBinding Width}" Fill="Blue"/>
                            </DockPanel>
                        </Grid>
                    <StackPanel Orientation="Vertical">
                            <Rectangle Fill="Transparent" Stroke="White" HorizontalAlignment="Stretch" Height="19" Margin="0 0 0 1"/>
                        <Rectangle Fill="Transparent" Stroke="White" HorizontalAlignment="Stretch" Height="19" Margin="0 0 0 1"/>
                        <Rectangle Fill="Transparent" Stroke="White" HorizontalAlignment="Stretch" Height="19" Margin="0 0 0 1"/>
                            <Rectangle Fill="Transparent" Stroke="White" HorizontalAlignment="Stretch" Height="19" Margin="0 0 0 1"/>
                        <Rectangle Fill="Transparent" Stroke="White" HorizontalAlignment="Stretch" Height="19" Margin="0 0 0 1"/>
                        <Rectangle Fill="Transparent" Stroke="White" HorizontalAlignment="Stretch" Height="19" Margin="0 0 0 1"/>
                        <Rectangle Fill="Transparent" Stroke="White" HorizontalAlignment="Stretch" Height="19" Margin="0 0 0 1"/>
                        <Rectangle Fill="Transparent" Stroke="White" HorizontalAlignment="Stretch" Height="19" Margin="0 0 0 1"/>
                        <Rectangle Fill="Transparent" Stroke="White" HorizontalAlignment="Stretch" Height="19" Margin="0 0 0 1"/>
                        <Rectangle Fill="Transparent" Stroke="White" HorizontalAlignment="Stretch" Height="19" Margin="0 0"/>
                    </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--Orientation="Vertical" HorizontalContentAlignment="Stretch" 
                             VerticalContentAlignment="Stretch" VerticalAlignment="Center"  
                             SnapsToDevicePixels="True"-->






</ResourceDictionary>