<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Medicine.Packages.Controls">
    <!-- Style for generic keyboard key -->
    <Style x:Key="KeyboardKeyStyle" TargetType="{x:Type local:KeyboardKey}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
        <Setter Property="Background" Value="#8083A8FF" />
        <Setter Property="Foreground" Value="#FFFFFF" />

        <Setter Property="Padding" Value="3" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#8083A8FF" Offset="0" />
                    <GradientStop Color="#FFFFFF" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <!--<Grid>-->


                    <Border x:Name="Background" CornerRadius="20" Background="#8083A8FF" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">

                        <ContentPresenter
                              x:Name="contentPresenter"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}"></ContentPresenter>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Background" Property="CornerRadius" Value="20" />
                            <Setter TargetName="Background" Property="SnapsToDevicePixels" Value="true" />
                            <Setter TargetName="Background" Property="Background" Value="#83A8FF"></Setter>
                            <Setter TargetName="Background" Property="BorderThickness" Value="2"></Setter>
                            <Setter TargetName="Background" Property="BorderBrush" Value="#D5EBFC"></Setter>
                            <Setter TargetName="Background" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1.05" ScaleY="1.05"></ScaleTransform>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="#F1EBFF"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Style for caps lock -->
    <Style x:Key="CapsLockKeyStyle" TargetType="{x:Type local:KeyboardKey}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
        <Setter Property="Background" Value="#8083A8FF" />
        <Setter Property="Foreground" Value="#FFFFFF" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#8083A8FF" Offset="0" />
                    <GradientStop Color="#FFFFFF" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#83A8FF" />
                                        <ColorAnimation Duration="0" Storyboard.TargetName="grdBackground" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#8083A8FF" />
                                        <ColorAnimation Duration="0" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" To="White" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity" To=".55" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ShiftedGroup">
                                <VisualState Name="NotShifted" />
                                <VisualState Name="Shifted" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CapsLockedGroup">
                                <VisualState Name="NoCapsLocked" />
                                <VisualState Name="CapsLocked">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#83A8FF" />
                                        <ColorAnimation Duration="0" Storyboard.TargetName="grdBackground" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#8083A8FF" />
                                        <ColorAnimation Duration="0" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" To="White" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="Background" CornerRadius="20" Background="#8083A8FF" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                            <Grid x:Name="grdBackground" Background="{TemplateBinding Background}"  Margin="10" Opacity="0"/>
                        </Border>
                        <ContentPresenter
                              x:Name="contentPresenter"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="BorderThickness" Value="2"></Setter>
                <Setter Property="BorderBrush" Value="#F1EBFF"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Style for shift key -->
    <Style x:Key="ShiftKeyStyle" TargetType="{x:Type local:KeyboardKey}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
        <!--<Setter Property="Background" Value="White" />-->
        <Setter Property="Background" Value="#8083A8FF" />
        <Setter Property="Foreground" Value="#FFFFFF" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#8083A8FF" Offset="0" />
                    <GradientStop Color="#FFFFFF" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="White" />
                                        <ColorAnimation Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#83A8FF" />
                                        <ColorAnimation Duration="0" Storyboard.TargetName="grdBackground" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF1173A8" />
                                        <ColorAnimation Duration="0" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" To="White" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity" To=".55" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ShiftedGroup">
                                <VisualState Name="NotShifted" />
                                <VisualState Name="Shifted">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="White" />
                                        <ColorAnimation Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#83A8FF" />
                                        <ColorAnimation Duration="0" Storyboard.TargetName="grdBackground" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF1173A8" />
                                        <ColorAnimation Duration="0" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" To="White" />

                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CapsLockedGroup">
                                <VisualState Name="NoCapsLocked" />
                                <VisualState Name="CapsLocked" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="Background" CornerRadius="20" Background="#8083A8FF" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                            <Grid x:Name="grdBackground" Background="{TemplateBinding Background}"  Margin="10" Opacity="0"/>

                        </Border>
                        <ContentPresenter
                              x:Name="contentPresenter"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}" />

                        <Rectangle x:Name="DisabledVisualElement" RadiusX="3" RadiusY="3" Fill="#FFFFFFFF" Opacity="0" IsHitTestVisible="false" />
                        <Rectangle x:Name="FocusVisualElement" RadiusX="2" RadiusY="2" Margin="1" Stroke="#FF6DBDD1" StrokeThickness="1" Opacity="0" IsHitTestVisible="false" />

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="BorderThickness" Value="2"></Setter>
                <Setter Property="BorderBrush" Value="#F1EBFF"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:UnicodeKeyboardKey}" BasedOn="{StaticResource KeyboardKeyStyle}" />
    <Style TargetType="{x:Type local:VirtualKeyKeyboardKey}" BasedOn="{StaticResource KeyboardKeyStyle}" />
    <Style TargetType="{x:Type local:ShiftKeyboardKey}" BasedOn="{StaticResource ShiftKeyStyle}" />
    <Style TargetType="{x:Type local:CapsKeyboardKey}" BasedOn="{StaticResource CapsLockKeyStyle}" />

    <Style TargetType="{x:Type local:Keyboard}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Keyboard}">

                    <Border Padding="7" CornerRadius="15" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <ContentPresenter x:Name="PART_ContentPresenter" Content="{Binding Content,RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
                      
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>